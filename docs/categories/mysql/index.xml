<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on 朝花夕拾</title>
    <link>https://domyson.github.io/categories/mysql/</link>
    <description>Recent content in Mysql on 朝花夕拾</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 06 Jan 2025 02:10:11 +0000</lastBuildDate>
    <atom:link href="https://domyson.github.io/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mysql QA</title>
      <link>https://domyson.github.io/post/mysql100%E9%97%AE/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://domyson.github.io/post/mysql100%E9%97%AE/</guid>
      <description>&lt;h1 id=&#34;聚集非聚集联合索引&#34;&gt;聚集、非聚集、联合索引&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A1: 聚集索引（主键索引）所有ROW都会按照主键索引进行排序&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A2: 非聚集索引即普通索引加上字段&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A3: 几个字段组成的索引&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A4: 聚集索引在物理上连续，非聚集索引在物理上不连续，但在逻辑上连续&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A5: 聚集索引影响物理存储顺序，而非聚集索引不影响&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A6: 聚集索引插入慢，查询快，非聚集索引反之&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A7: 索引是通过二叉树来描述的，聚集索引的子叶节点也是数据节点，而非聚集索引子叶节点仍是索引节点&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;自增主键有哪些问题&#34;&gt;自增主键有哪些问题&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A1: 分表分库的时候可能会出现重复情况（可使用uuid替代）&lt;/li&gt;&#xA;&lt;li&gt;A2: 产生表锁&lt;/li&gt;&#xA;&lt;li&gt;A3: id耗尽&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;索引无效的情况&#34;&gt;索引无效的情况&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A1: 以&lt;code&gt;%&lt;/code&gt;开头的&lt;code&gt;LIKE&lt;/code&gt;语句，模糊匹配&lt;/li&gt;&#xA;&lt;li&gt;A2: &lt;code&gt;OR&lt;/code&gt; 前后字段未同时使用索引&lt;/li&gt;&#xA;&lt;li&gt;A3: 数据类型隐式转换（varchar-&amp;gt;int)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;查询优化&#34;&gt;查询优化&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A1: 在&lt;code&gt;WHERE&lt;/code&gt;和&lt;code&gt;ORDER BY&lt;/code&gt;所涉及的列上加上索引&lt;/li&gt;&#xA;&lt;li&gt;A2: &lt;code&gt;SELECT&lt;/code&gt;避免使用&lt;code&gt;*&lt;/code&gt;,SQL语句全部大写&lt;/li&gt;&#xA;&lt;li&gt;A3: 避免&lt;code&gt;WHERE&lt;/code&gt;对索引列上进行&lt;code&gt;IS NULL&lt;/code&gt;判断，替换成&lt;code&gt;IS NOT NULL&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;A4: &lt;code&gt;IN&lt;/code&gt;和&lt;code&gt;NOT IN&lt;/code&gt;会导致全表扫描,替换为&lt;code&gt;EXISTS&lt;/code&gt;或&lt;code&gt;NOT EXISTS&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;A5: 避免在索引上进行计算&lt;/li&gt;&#xA;&lt;li&gt;A6: &lt;code&gt;WHRER&lt;/code&gt;使用&lt;code&gt;OR&lt;/code&gt;会放弃索引进而全表扫描&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;char和varchar的区别&#34;&gt;CHAR和VARCHAR的区别&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A1: 存储和检索方式不同&lt;/li&gt;&#xA;&lt;li&gt;A2: &lt;code&gt;CHAR&lt;/code&gt;长度在创建时候指定(1~255),在存储时尾部全部填充空格&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;主键索引和唯一索引的区别&#34;&gt;主键索引和唯一索引的区别&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A1: 主键是一种约束&lt;/li&gt;&#xA;&lt;li&gt;A2: 主键一定包含一个唯一索引，反之不成立&lt;/li&gt;&#xA;&lt;li&gt;A3: 主键索引不允许包含空值，而唯一索引可以&lt;/li&gt;&#xA;&lt;li&gt;A4: 一张表只能有一个主键索引，而唯一索引可以有多个&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;cpu飙升问题排查&#34;&gt;CPU飙升问题排查&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A1: top命令观察&lt;code&gt;mysqld&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;A2: 若是，则&lt;code&gt;show processlist&lt;/code&gt;查看是否是 SQL 的问题，&lt;/li&gt;&#xA;&lt;li&gt;A3: 若是，则检查执行计划是否准确，是否索引确实，数据是否太大&lt;/li&gt;&#xA;&lt;li&gt;A4: kill上述线程，加索引，改内存，改SQL并重跑&lt;/li&gt;&#xA;&lt;li&gt;A5: 若不是，可能是短时间有大量连接，可以限制最大连接数&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;如何创建索引&#34;&gt;如何创建索引&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A1:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
