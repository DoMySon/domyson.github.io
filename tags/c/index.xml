<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on 朝花夕拾</title>
    <link>https://domyson.github.io/tags/c/</link>
    <description>Recent content in C on 朝花夕拾</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 05 Jul 2024 15:34:20 +0000</lastBuildDate>
    <atom:link href="https://domyson.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>预处理器</title>
      <link>https://domyson.github.io/post/language/c/preprocessor/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://domyson.github.io/post/language/c/preprocessor/</guid>
      <description>预处理器 #pragma 用于指示编译器完成一些特定的动作&#xA;#pragma message usermessage&#xA;//example:test.c #include &amp;lt;stdio.h&amp;gt; #define IOS #if defined IOS #pragma message &amp;#34;ready complie ios...&amp;#34; #endif //complie output: note: #pragma message: ready complie ios... #pragma once 确保头文件仅被编译一次&#xA;//example:test.h #pragma once int value = 10; //example:test.c #include &amp;#34;test.h&amp;#34; #include &amp;#34;test.h&amp;#34; #pragma pack(size_t) 指定内存对齐&#xA;//example:test.c // 2byte 对齐 #pragma pack(2) struct foo{ char c1; char c2: short 2; int i; }; // 4byte 对齐 #pragma pack(4) struct bar{ char c1; shirt s; char c2; int i; }; void main(){ printf(&amp;#34;%d\n&amp;#34;,sizeof(struct foo)); //8 printf(&amp;#34;%d\n&amp;#34;,sizeof(struct bar)); //12 } 在不同编译器之间不可移植，在不同编译器可能以不同的方式解释，预处理器将忽略不被识别的此指令</description>
    </item>
  </channel>
</rss>
