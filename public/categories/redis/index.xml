<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on 满船清梦压星河</title>
    <link>https://domyson.github.io/categories/redis/</link>
    <description>Recent content in Redis on 满船清梦压星河</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 28 Mar 2024 03:25:35 +0000</lastBuildDate>
    <atom:link href="https://domyson.github.io/categories/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>redis</title>
      <link>https://domyson.github.io/post/db/redis/redis/</link>
      <pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://domyson.github.io/post/db/redis/redis/</guid>
      <description>Redis Remote Dictionary Server,采用 ANSI C 编写的 K-V数据库&#xA;Redis命令&#xA;Redis下载&#xA;类型 string 最大存储值为256mb，底层由SDS(simple dynamic string)实现，优势是访问长度仅需O(1)&#xA;hash&#xA;list 存储有序字符串，最大2^32-1个元素&#xA;set&#xA;同list，但不允许重复&#xA;sorted set 已排序的都字符串集合，但不允许重复 &amp;ndash; 其它&#xA;GEO 地理位置 HyperLogLog 基数统计 Bitsmap bit数组，类似boolean filter redis设计架构 单线程业务，多线程存储，redis6.0引入多线程也仅仅是为了提高解析命令的速度&#xA;虚拟内存&#xA;虚拟内存机制就是暂时把不经常访问的数据(冷数据)从内存交换到磁盘中，从而腾出宝贵的内存空间用于其它需要访问的数据(热数据)。通过VM功能可以实现冷热数据分离，使热数据仍在内存中、冷数据保存到磁盘。这样就可以避免因为内存不足而造成访问速度下降的问题。&#xA;击穿，穿透，雪崩 击穿 某个key在过期点的时候，突然出现大量请求查找这个key&#xA;穿透 访问一个不存在的key的时候&#xA;雪崩 指缓存中数据大批量到过期时间，访问落到db上，造成db压力过大&#xA;持久化机制 RDB RDB持久化，是指在指定的时间间隔内，执行指定次数的写操作，将内存中的数据集快照写入磁盘中，它是Redis默认的持久化方式。执行完操作后，在指定目录下会生成一个dump.rdb文件，Redis 重启的时候，通过加载dump.rdb文件来恢复数据&#xA;分为手动触发和自动触发&#xA;优点 适合大规模的数据恢复场景，如备份，全量复制等&#xA;缺点 没办法做到实时持久化/秒级持久化。&#xA;AOF 采用日志的形式来记录每个写操作，追加到文件中，重启时再重新执行AOF文件中的命令来恢复数据。它主要解决数据持久化的实时性问题&#xA;优点 数据一致性和完整性更高 缺点 内容越多，文件越大，恢复变慢，它需要将所有命令执行一遍&#xA;高可用 主从 类似mysql主从，master负责写，slave负责读&#xA;哨兵 监视其他节点的状态&#xA;集群 Gossip，HashSlot 16384&#xA;View&#xA;分布式锁 setnx setnx nx [expired]</description>
    </item>
  </channel>
</rss>
